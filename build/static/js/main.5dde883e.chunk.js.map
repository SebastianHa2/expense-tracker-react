{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onSelectedFilterYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","selectedYear","setSelectedYear","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","htmlFor","type","step","min","onClick","onCancel","NewExpense","showNewExpenseForm","setShowNewExpenseForm","enteredExpenseData","random","onPassNewExpenseData","DUMMY_EXPENSES","App","setExpenses","newExpenseData","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dde883e.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","\r\nimport './ExpenseFilter.css';\r\n\r\nfunction ExpensesFilter(props) {\r\n\r\n    const filterExpensesHandler = event => {\r\n        props.onSelectedFilterYear(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n        <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select value={props.selected} onChange={filterExpensesHandler} >\r\n            <option value='2022'>2022</option>\r\n            <option value='2021'>2021</option>\r\n            <option value='2020'>2020</option>\r\n            <option value='2019'>2019</option>\r\n            </select>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'})\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'})\r\n    const year = props.date.getFullYear()\r\n    \r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate","import './ExpenseItem.css'\r\n\r\nimport ExpenseDate from './ExpenseDate'\r\nimport Card from '../UI/Card'\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date}></ExpenseDate>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\"> ${props.amount} </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem","import './ExpensesList.css'\r\n\r\nimport ExpenseItem from './ExpenseItem'\r\n\r\nfunction ExpensesList(props) {\r\n\r\n    if(props.filteredExpenses.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {\r\n                props.filteredExpenses.map(expense => {\r\n                    return <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id} />\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList","\r\nimport './ChartBar.css'\r\n\r\nfunction ChartBar(props) {\r\n    let barFillHeight = '0%'\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar","import ChartBar from './ChartBar'\r\nimport './Chart.css'\r\n\r\nfunction Chart(props) {\r\n    const valueArray = props.dataPoints.map(dataPoint => {return dataPoint.value})\r\n    const totalMax = Math.max(...valueArray)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => {\r\n                return <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMax} label={dataPoint.label}></ChartBar>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import Chart from '../Chart/Chart'\r\n\r\nfunction ExpensesChart(props) {\r\n    const chartDataPoints = [\r\n        {\r\n            label: 'Jan',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Feb',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Mar',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Apr',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'May',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Jun',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Jul',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Aug',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Sep',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Oct',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Nov',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Dec',\r\n            value: 0\r\n        },\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth()\r\n        chartDataPoints[expenseMonth].value += expense.amount\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}></Chart>\r\n    )\r\n}\r\n\r\nexport default ExpensesChart","import Card from '../UI/Card'\r\nimport ExpenseFilter from './ExpenseFilter'\r\nimport ExpensesList from './ExpensesList'\r\nimport ExpensesChart from './ExpensesChart'\r\nimport { useState } from 'react'\r\n\r\nimport './Expenses.css'\r\n\r\nfunction Expenses(props) {\r\n    const [selectedYear, setSelectedYear] = useState('2021')\r\n\r\n    const filterExpensesHandler = year => {\r\n        setSelectedYear(year)\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === selectedYear;\r\n      });  \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpenseFilter selected={selectedYear} onSelectedFilterYear={filterExpensesHandler}></ExpenseFilter>\r\n            <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n            <ExpensesList filteredExpenses={filteredExpenses} ></ExpensesList>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses","import './ExpenseForm.css'\r\n\r\nimport { useState } from 'react'\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('')\r\n    const [enteredAmount, setEnteredAmount] = useState('')\r\n    const [enteredDate, setEnteredDate] = useState('')\r\n\r\n\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // })\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value)\r\n\r\n        // setUserInput(prevState => {\r\n        //     return {\r\n        //         ...prevState,\r\n        //         enteredTitle: event.target.value\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value)\r\n\r\n        // setUserInput(prevState => {\r\n        //     return {\r\n        //         ...prevState,\r\n        //         enteredAmount: event.target.value\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value)\r\n\r\n        // setUserInput(prevState => {\r\n        //     return {\r\n        //         ...prevState,\r\n        //         enteredDate: event.target.value\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        setEnteredTitle('')\r\n        setEnteredAmount('')\r\n        setEnteredDate('')\r\n\r\n        props.onSaveExpenseData(expenseData)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input type=\"number\" step=\"0.01\" min=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"date\" id=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm","import './NewExpense.css'\r\n\r\nimport ExpenseForm from './ExpenseForm'\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction NewExpense(props) {\r\n    const saveExpenseDataHandler = enteredExpenseData => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onPassNewExpenseData(expenseData)\r\n    }\r\n\r\n    const hideExpenseFormHandler = () => {\r\n        setShowNewExpenseForm(false)\r\n    }\r\n\r\n    const [showNewExpenseForm, setShowNewExpenseForm] = useState(false)\r\n\r\n    const showExpenseForm = () => {\r\n        setShowNewExpenseForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {showNewExpenseForm && <ExpenseForm onCancel={hideExpenseFormHandler} onSaveExpenseData={saveExpenseDataHandler} ></ExpenseForm>}\r\n            {!showNewExpenseForm && <button onClick={showExpenseForm}>Add New Expense</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense","import { useState } from 'react'\nimport Expenses from './components/Expenses/Expenses'\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const newExpenseDataHandler = newExpenseData => {\n    setExpenses(prevExpenses => {\n      return [newExpenseData, ...prevExpenses]\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onPassNewExpenseData={newExpenseDataHandler} ></NewExpense>\n      <Expenses expenses={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}